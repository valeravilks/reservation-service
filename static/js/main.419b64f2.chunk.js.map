{"version":3,"sources":["store/login/action.ts","store/login/types.ts","components/login/index.tsx","pages/login/index.tsx","pages/main/index.tsx","pages/account/index.tsx","pages/registration/index.tsx","store/firebase.ts","store/login/reducer.ts","store/rootReducers.ts","store/login/saga.ts","store/sagas.ts","store/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["errorAuthAction","status","type","authProcessAction","validationShema","Yup","shape","email","required","password","min","max","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","state","login","errorAuth","formDisabled","authProcess","dispatch","singIn","pass","singInAction","push","value","props","classes","Container","component","maxWidth","CssBaseline","className","Avatar","initialValues","onSubmit","values","setSubmitting","resetForm","validationSchema","handleChange","handleBlur","handleSubmit","noValidate","TextField","fullWidth","id","label","name","autoComplete","onChange","onBlur","disabled","Button","Grid","container","item","xs","onClick","e","console","log","preventDefault","Box","mt","out","singUp","singUpAction","emailRef","React","createRef","passRef","autoFocus","inputRef","current","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","a","firebase","signInWithEmailAndPassword","singOut","signOut","inAuth","user","currentUser","Boolean","initialState","isAuth","Firebase","action","RootReducer","history","combineReducers","router","connectRouter","SingInBase","watchIncrementAsync","baseLoginOut","watchLoginOut","put","takeEvery","rootSaga","all","createBrowserHistory","sagaMiddleware","CreateSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","routerMiddleware","run","add","basename","process","exact","path","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.419b64f2.chunk.js","sourcesContent":["import {\n    ERROR_AUTH,\n    LOGIN_OUT,\n    SING_IN_EMAIL,\n    SING_UP_EMAIL,\n    AUTH_PROCESS\n} from \"./types\";\n\nexport function singInAction(email: string, pass: string) {\n    return {\n        type: SING_IN_EMAIL,\n        email,\n        pass\n    }\n}\n\nexport function singLoginOut() {\n    return {\n        type: LOGIN_OUT,\n    }\n}\n\nexport function singUpAction(email: string, pass: string) {\n    return {\n        type: SING_UP_EMAIL,\n        email,\n        pass\n    }\n}\n\nexport function errorAuthAction(status: boolean) {\n    return {\n        type: ERROR_AUTH,\n        status\n    }\n}\n\nexport function authProcessAction(status: boolean) {\n    return {\n        type: AUTH_PROCESS,\n        status\n    }\n}","export interface IState {\n    isAuth: boolean,\n    errorAuth: boolean,\n    authProcess: boolean,\n}\n\nexport const SING_IN_EMAIL = 'SING_IN_EMAIL';\nexport const LOGIN_OUT = 'LOGIN_OUT';\nexport const SING_UP_EMAIL = 'SING_UP_EMAIL';\nexport const ERROR_AUTH = 'ERROR_AUTH';\nexport const AUTH_PROCESS = 'AUTH_PROCESS';\n\ninterface ISingInEmail {\n    type: typeof SING_IN_EMAIL,\n    email: string\n}\n\ninterface ILoginOut {\n    type: typeof LOGIN_OUT,\n}\n\ninterface ISingUpEmail {\n    type: typeof LOGIN_OUT,\n    email: string\n}\n\ninterface IErrorAuth {\n    type: typeof ERROR_AUTH,\n    status: boolean\n}\n\ninterface IAuthProcess {\n    type: typeof AUTH_PROCESS,\n    status: boolean\n}\n\nexport type LoginActionType =\n    ISingInEmail |\n    ILoginOut |\n    ISingUpEmail |\n    IErrorAuth |\n    IAuthProcess;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { singInAction } from \"../../store/login/action\";\nimport {push} from \"connected-react-router\";\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\n\nconst validationShema:any = Yup.object().shape({\n    email: Yup.string()\n        .email(\"Введите корректный email адрес\")\n        .required('Данное поле обязательно для заполнения'),\n    password: Yup.string()\n        .min(5, 'Пароль минимум 6 символов')\n        .max(20, 'Пароль максимум 20 симолов')\n        .required('Данное поле обязательно для заполнения')\n});\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = (props:any) => {\n\n    const classes = useStyles();\n\n    const toRegistrationPage = (e:any) => {\n        console.log(e);\n        e.preventDefault();\n        props.push('/registration')\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Авторизация\n                </Typography>\n                {props.errorAuth ? 'Неправильный логин или пароль' : ''}\n                <Formik initialValues={{email: '', password: ''}}\n                        onSubmit={(values, {setSubmitting, resetForm}) => {\n                            props.singIn(values.email, values.password);\n                            setSubmitting(false);\n                        }}\n                        validationSchema={validationShema}\n                >\n                    {({\n                          values,\n                          handleChange,\n                          handleBlur,\n                          handleSubmit\n                    }) => (\n                        <Form className={classes.form} onSubmit={handleSubmit} noValidate >\n                            <Field\n                                component={TextField}\n                                type=\"email\"\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                value={values.email}\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                disabled={props.formDisabled}\n                            />\n                            <Field\n                                component={TextField}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Пароль\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.password}\n                                disabled={props.formDisabled}\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                disabled={props.formDisabled}\n                            >\n                                Войти\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n                <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                            Забыли пароль?\n                        </Link>\n                    </Grid>\n                    <Grid item xs>\n                        <Link variant=\"body2\"\n                              onClick={toRegistrationPage}>\n                            Нет аккаунта. Зарегистрируйся\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n};\n\nconst mapStateToProps = (state: any) => ({\n    email: state.login.email,\n    errorAuth: state.login.errorAuth,\n    formDisabled: state.login.authProcess\n});\n\n\nconst mapDispatchToProps = (dispatch:any) => ({\n    singIn: (email:any, pass:any) => {\n        dispatch(singInAction(email, pass))\n    },\n    push: (value:string) => dispatch(push(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\nimport Login from '../../components/login';\n\nexport default function(){\n    return(\n        <Login />\n    )\n}","import React from 'react';\nimport {Button} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {push} from \"connected-react-router\";\n\n\nconst MainPage = (props:any) => {\n\n    const toLoginPage = () => {\n        props.push('/login');\n        console.log(push);\n        console.log(props.push);\n    };\n\n    return (\n        <div>\n            MainPage\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={toLoginPage}\n            >\n                Логин\n            </Button>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch:any) => ({\n    push: (value:string) => dispatch(push(value))\n});\n\n\nexport default connect(null, mapDispatchToProps)(MainPage);","import React from 'react';\nimport {Button} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {singLoginOut} from \"../../store/login/action\";\n\nconst AccountPage = (props:any) => {\n    const loginOut = () => {\n        console.log(props);\n        props.out();\n\n    };\n    return(\n        <div>\n            AccountPage\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={loginOut}>\n                Выйти\n            </Button>\n        </div>\n    )\n};\n\nconst mapDispatchToProps = (dispatch:any) => ({\n    out: () => dispatch(singLoginOut())\n});\n\nexport default connect(null, mapDispatchToProps)(AccountPage);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n// import Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { singUpAction } from '../../store/login/action';\nimport { push } from \"connected-react-router\";\n\n\n// function Copyright() {\n//     return (\n//         <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//             {'Copyright © '}\n//             <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//                 Your Website\n//             </Link>{' '}\n//             {new Date().getFullYear()}\n//             {'.'}\n//         </Typography>\n//     );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = (props:any) => {\n\n    const classes = useStyles();\n\n    const emailRef:any = React.createRef();\n    const passRef:any = React.createRef();\n\n    const singIn = (event:any) => {\n        event.preventDefault();\n        props.singUp(emailRef.current.value, passRef.current.value);\n    };\n\n    const toLoginPage = () => {\n        props.push('/login');\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Регистрация\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        type=\"email\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        inputRef={emailRef}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        inputRef={passRef}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={(e:any) => singIn(e)}\n                    >\n                        Зарегистрироваться\n                    </Button>\n                    <Grid container>\n                        <Button\n                            onClick={toLoginPage}\n                        >Уже есть аккаунт. Войти</Button>\n                    </Grid>\n                </form>\n            </div>\n            {/*<Box mt={8}>*/}\n            {/*    <Copyright />*/}\n            {/*</Box>*/}\n        </Container>\n    );\n};\n\nconst mapStateToProps = (state: any) => ({\n    email: state.login.email\n});\n\n\nconst mapDispatchToProps = (dispatch:any) => ({\n    singUp: (email:any, pass:any) => {\n        dispatch(singUpAction(email, pass))\n    },\n    push: (value:string) => dispatch(push(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import * as firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDpA_QpjbHldTPVXiq5FYQDYv3SgEJnlMo\",\n    authDomain: \"test-c0f21.firebaseapp.com\",\n    databaseURL: \"https://test-c0f21.firebaseio.com\",\n    projectId: \"test-c0f21\",\n    storageBucket: \"test-c0f21.appspot.com\",\n    messagingSenderId: \"121729856495\",\n    appId: \"1:121729856495:web:07d12b62ef501879dbbc1a\"\n};\n\nclass Firebase {\n    constructor() {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    singIn = async (email: string, pass: string) => (\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, pass)\n    );\n\n    singOut = async () => (\n        firebase\n            .auth()\n            .signOut()\n    );\n\n    inAuth = (): boolean => {\n        let user = firebase.auth().currentUser;\n        console.log(Boolean(user));\n        return Boolean(user)\n    }\n}\n\n\nexport default new Firebase();","import {\n    ERROR_AUTH,\n    AUTH_PROCESS,\n    IState,\n    LoginActionType,\n} from './types';\n\nimport Firebase from '../firebase';\n\nconst initialState: IState = {\n    isAuth: Firebase.inAuth(),\n    errorAuth: false,\n    authProcess: false\n};\n\nexport default function(state:IState = initialState, action: LoginActionType): IState{\n    switch(action.type){\n        case ERROR_AUTH:\n            return {...state, errorAuth: action.status};\n        case AUTH_PROCESS:\n            return {...state, authProcess: action.status};\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from 'redux';\nimport login from './login/reducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from \"history\";\n\nconst RootReducer = (history: History) => combineReducers({\n   login,\n   router: connectRouter(history)\n});\n\nexport default RootReducer;","import { takeEvery, put } from 'redux-saga/effects';\nimport Firebase from \"../firebase\";\nimport {LOGIN_OUT, SING_IN_EMAIL} from \"./types\";\nimport { push } from 'connected-react-router'\nimport { errorAuthAction, authProcessAction } from \"./action\";\n\nfunction* SingInBase(props:any){\n    yield put(authProcessAction(true));\n    try{\n        yield Firebase.singIn(props.email, props.pass);\n        yield put(errorAuthAction(false));\n        yield put(push('/account'));\n    } catch (e) {\n        // TODO Added handling error\n        yield put(errorAuthAction(true));\n    }\n    yield put(authProcessAction(false));\n}\n\nexport function* watchIncrementAsync() {\n    yield takeEvery(SING_IN_EMAIL, SingInBase)\n}\n\nfunction* baseLoginOut(props:any){\n    try {\n        yield Firebase.singOut();\n        yield put(push('/'));\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport function* watchLoginOut() {\n    yield takeEvery(LOGIN_OUT, baseLoginOut)\n}","import { all } from 'redux-saga/effects';\nimport {watchIncrementAsync, watchLoginOut} from './login/saga';\n\nexport default function* rootSaga(){\n    yield all([\n        watchIncrementAsync(),\n        watchLoginOut()\n    ])\n}","import { createBrowserHistory } from 'history';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducers from './rootReducers';\nimport CreateSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport { routerMiddleware } from \"connected-react-router\";\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = CreateSagaMiddleware();\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducers(history),\n    composeEnhancers(applyMiddleware(sagaMiddleware), applyMiddleware(routerMiddleware(history)))\n);\n\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport Login from './pages/login';\nimport Main from './pages/main';\nimport Account from './pages/account';\nimport Registration from './pages/registration';\nimport {Switch, Route, BrowserRouter} from \"react-router-dom\";\nimport {history} from \"./store\";\nimport {ConnectedRouter, } from \"connected-react-router\";\n\nfunction App(props:any) {\n  return (\n    <>\n      <ConnectedRouter history={history}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <Switch>\n                <Route exact path='/'>\n                  <Main />\n                </Route>\n                <Route path='/login'>\n                  <Login />s\n                </Route>\n                <Route path='/account'>\n                  <Account/>\n                </Route>\n                <Route path='/registration'>\n                   <Registration/>\n                </Route>\n              </Switch>\n          </BrowserRouter>\n      </ConnectedRouter>\n    </>\n  );\n}\n\nexport default connect(state => ({\n  state\n}), dispatch => ({\n  add: () => dispatch({type: 'INCREMENT_ASYNC'})\n}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, {history} from './store';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App history={history} />\n        </React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}